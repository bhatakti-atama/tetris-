 void s_shape()
{
      x[0] = 5; /*tl*/
    x[1] = 4; /*tr*/
    x[2] = 4; /*bl*/
    x[3] = 3; /*br*/
    y[0] = 2; /*tl*/
    y[1] = 2; /*tr*/
    y[2] = 3; /*bl*/
    y[3] = 3;
     for(int i=0;i<4;i++)
    {
      tetris[y[i]][x[i]]=1;
    }
    scan();
    condition=1;
    while(condition==1)
    {
      if (y[3] < 17 && (tetris[y[3]+1][x[3]]) == 0 && (tetris[y[2]+1][x[2]]) == 0 && (tetris[y[0]+1][x[0]]) == 0 )
         {
        timeInitial = millis();
        timeFinal = timeInitial;
        while((timeFinal - timeInitial) < 1500)
        { 
          timeFinal = millis();
          if(b1Input() == 1 && tetris[y[3]][x[3]-1] ==0 && tetris[y[1]][x[1]-1] ==0 && x[3]>0)
          {
            for(int i=0;i<4;i++)
            
              tetris[y[i]][x[i]] = 0;
              for(int i=0;i<4;i++)
              {
              x[i] = x[i] - 1;
              tetris[y[i]][x[i]] = 1;
            }
            scan();
          }
        else if(b2Input() == 1 && tetris[y[0]][x[0]+1] ==0 && tetris[y[2]][x[2]+1] ==0  && x[0]<8)
          {
            for(int i=0;i<4;i++)
            {
              tetris[y[i]][x[i]] = 0;
            }
            for(int i =0 ;i<4;i++)
            {
              x[i] = x[i] + 1;
              tetris[y[i]][x[i]] = 1;
            }
            
            scan();
          }
 }
        for(int i=0;i<4;i++)
        {
          tetris[y[i]][x[i]] = 0;
          
        }
        
        for(int i=0;i<4;i++)
        {
          y[i] = y[i] +1;
          tetris[y[i]][x[i]]=1;
          
        }
        scan();
            
      }
           if (y[3] < 17 && (tetris[y[3]+1][x[3]]) == 0 && (tetris[y[0]+1][x[0]]) == 0 && (tetris[y[2]+1][x[2]]) == 0)
      {

      }
      else
      {
        condition = 0;
      }
      scan();
      }
    }
