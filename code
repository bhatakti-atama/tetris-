#include <FastLED.h>
#define LED_PIN 6/*enter led pin*/
#define NUM_LEDS 136
CRGB leds[NUM_LEDS];
int selection; /* selects one random block */
int x[4]={0}; /* x cordinates for 4 peices of a block*/
int y[4]={0};/* y cordinates for 4 peices of a block*/
int tetris[18][9]={0}; /* computer matrix to be shown on screen*/
int condition;/* 1 if block moves down 0 if block is fixed*/
int blankRows[14];/*counts empty rows*/
int emptyRowCounter;/*counts number of blank rows*/
int lor;/* last occupied row*/
int lur; /* last unoccupied row*/
int timeInitial;
int timeFinal;
int ledNumber;/*couhnts led number while scanning*/
void setup() 
{
  // put your setup code here, to run once:
  FastLED.addLeds<WS2812, LED_PIN, GRB>(leds,NUM_LEDS);
}
/*count top to bottom from left to right*/
void loop() 
{
  selection = random(1,8); /* selecting one type of block*/
  switch(selection)
  {
    case 1:
    {
      /*square*/
      /*loading the blocks*/
      x[0]=3;/*tl*/
      x[1]=4;/*tr*/
      x[2]=3;/*bl*/
      x[3]=4;/*br*/
      y[0]=2;/*tl*/
      y[1]=2;/*tr*/
      y[2]=3;/*bl*/
      y[3]=3;/*br*/
      /* filling the nlocks*/
      for(int i=0;i<4;i++)
      {
        tetris[x[i]][y[i]]=1;
      }
      /* !!!!!! scan !!!!!!! */
      ledNumber=0;
      for(int i=4;i<18;i++)
      {
        if((i%2)==0)
        {
          for(int j=8;j>=0;j--)
          {
            if(tetris[j][i]==1)
            {
              leds[ledNumber] = CRGB(255,0,0);
            }
            else
            {
              leds[ledNumber] = CRGB(0,0,0);
            }
            ledNumber = ledNumber +1;
          }
        }
        else
        {
          for(int j=0;j<9;j++)
          {
            if(tetris[j][i]==1)
            {
              leds[ledNumber] = CRGB(255,0,0);
            }
            else
            {
              leds[ledNumber] = CRGB(0,0,0);
            }
            ledNumber = ledNumber + 1;
          }
        }  
      }
      FastLED.show();
      /* down*/
      condition = 1;
      while(condition == 1)
      {
        if(y[3]< && (tetris[x[2]][y[2]+1])==0 && (tetris[x[3]][y[3]+1])==0) /*condition if if y+1 is free */
        {
            /*movement*/
            timeInitial= millis();
            timeFinal = timeInitial; /*calculating time spent in in each row which shoul always be less than 3 seconds*/
            while((timeFinal-timeInitial)<=3000)
            {
              timeFinal = millis();
              if(/*left high*/tetris[x[0]-1][y[0]]== 0 && tetris[x[2]-1][y[2]]== 0 && x[0] != 0)
              {
                /* chnages x cordinate of all blocks by -1 */
                x[0]= x[0]-1;/*tl*/
                x[1]= x[1]-1;/*tr*/
                x[2]= x[2]-1;/*bl*/
                x[3]= x[3]-1;/*br*/
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]+1][y[i]]=0;
                }
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]][y[i]]=1;
                }
                /* !!!!!! scan !!!!!!! */
                ledNumber=0;
                for(int i=4;i<22;i++)
                {
                  if((i%2)==0)
                  {
                    for(int j=8;j>=0;j--)
                    {
                      if(tetris[j][i]==1)
                      {
                        leds[ledNumber] = CRGB(255,0,0);
                      }
                      else
                      {
                        leds[ledNumber] = CRGB(0,0,0);
                      }
                      ledNumber = ledNumber +1;
                    }
                  }
                  else
                  {
                    for(int j=0;j<9;j++)
                    {
                      if(tetris[j][i]==1)
                      {
                        leds[ledNumber] = CRGB(255,0,0);
                      }
                      else
                      {
                        leds[ledNumber] = CRGB(0,0,0);
                      }
                      ledNumber = ledNumber + 1;
                    }
                  }  
                }
                FastLED.show();
              }
              else if(/*right high*/tetris[x[1]+1][y[1]]== 0 && tetris[x[3]+1][y[3]]== 0 && x[1] != 8)
              {
                /* chnages x cordinate of all blocks by +1 */
                x[0]= x[0]+1;/*tl*/
                x[1]= x[1]+1;/*tr*/
                x[2]= x[2]+1;/*bl*/
                x[3]= x[3]+1;/*br*/
                for(int i=0;i<4;i++)
                /*turning previous led off*/
                {
                  tetris[x[i]-1][y[i]]=0;
                }
                /* turning new leds on */
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]][y[i]]=1;
                }
              }
              /* !!!!!! scan !!!!!!! */
              ledNumber=0;
              for(int i=4;i<22;i++)
              {
                if((i%2)==0)
                {
                  for(int j=8;j>=0;j--)
                  {
                    if(tetris[j][i]==1)
                    {
                      leds[ledNumber] = CRGB(255,0,0);
                    }
                    else
                    {
                      leds[ledNumber] = CRGB(0,0,0);
                    }
                    ledNumber = ledNumber +1;
                  }
                }
                else
                {
                  for(int j=0;j<9;j++)
                  {
                    if(tetris[j][i]==1)
                    {
                      leds[ledNumber] = CRGB(255,0,0);
                    }
                    else
                    {
                      leds[ledNumber] = CRGB(0,0,0);
                    }
                    ledNumber = ledNumber + 1;
                  }
                }  
              }
              FastLED.show();
            /* making the block go down */
            for(int i=0;i<4;i++)
            {
              y[i] = y[i] +1;
            }
            for(int i=0;i<4;i++)
            /*turning previous led off*/
            {
              tetris[x[i]][y[i]-1]=0;
            }
            /* turning new leds on */
            for(int i=0;i<4;i++)
            {
              tetris[x[i]][y[i]]=1;
            }
            /*scan*/
           /* !!!!!! scan !!!!!!! */
            ledNumber=0;
            for(int i=4;i<22;i++)
            {
              if((i%2)==0)
              {
                for(int j=8;j>=0;j--)
                {
                  if(tetris[j][i]==1)
                  {
                    leds[ledNumber] = CRGB(255,0,0);
                  }
                  else
                  {
                    leds[ledNumber] = CRGB(0,0,0);
                  }
                  ledNumber = ledNumber +1;
                }
              }
              else
              {
                for(int j=0;j<9;j++)
                {
                  if(tetris[j][i]==1)
                  {
                    leds[ledNumber] = CRGB(255,0,0);
                  }
                  else
                  {
                    leds[ledNumber] = CRGB(0,0,0);
                  }
                  ledNumber = ledNumber + 1;
                }
              }  
            }
            FastLED.show();
        }
        }
        else
        {
            /*movement*/
            timeInitial= millis();
            timeFinal = timeInitial; /*calculating time spent in in each row which shoul always be less than 3 seconds*/
            while((timeFinal-timeInitial)<=3)
            {
              timeFinal = millis();
              if(/*left high*/tetris[x[0]-1][y[0]]== 0 && tetris[x[2]-1][y[2]]== 0 && x[0] != 0)
              {
                /* chnages x cordinate of all blocks by -1 */
                x[0]= x[0]-1;/*tl*/
                x[1]= x[1]-1;/*tr*/
                x[2]= x[2]-1;/*bl*/
                x[3]= x[3]-1;/*br*/
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]+1][y[i]]=0;
                }
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]][y[i]]=1;
                }
              }
              else if(/*right high*/tetris[x[1]+1][y[1]]== 0 && tetris[x[3]+1][y[3]]== 0 && x[1] != 8)
              {
                /* chnages x cordinate of all blocks by +1 */
                x[0]= x[0]+1;/*tl*/
                x[1]= x[1]+1;/*tr*/
                x[2]= x[2]+1;/*bl*/
                x[3]= x[3]+1;/*br*/
                for(int i=0;i<4;i++)
                /*turning previous led off*/
                {
                  tetris[x[i]-1][y[i]]=0;
                }
                /* turning new leds on */
                for(int i=0;i<4;i++)
                {
                  tetris[x[i]][y[i]]=1;
                }
                if (y[3]<14 && (tetris[x[2]][y[2]+1])==0 && (tetris[x[3]][y[3]+1])==0)/*condition if if y+1 is free */
                {
                  condition = 1;
                }
                
              }
              /* !!!!!! scan !!!!!!! */
              ledNumber=0;
              for(int i=4;i<22;i++)
              {
                if((i%2)==0)
                {
                  for(int j=8;j>=0;j--)
                  {
                    if(tetris[j][i]==1)
                    {
                      leds[ledNumber] = CRGB(255,0,0);
                    }
                    else
                    {
                      leds[ledNumber] = CRGB(0,0,0);
                    }
                    ledNumber = ledNumber +1;
                  }
                }
                else
                {
                  for(int j=0;j<9;j++)
                  {
                    if(tetris[j][i]==1)
                    {
                      leds[ledNumber] = CRGB(255,0,0);
                    }
                    else
                    {
                      leds[ledNumber] = CRGB(0,0,0);
                    }
                    ledNumber = ledNumber + 1;
                  }
                }  
              }
              FastLED.show();
            }
            if(y[3]<21 && (tetris[x[2]][y[2]+1])==0 && (tetris[x[3]][y[3]+1])==0) /*condition if if y+1 is free */
            {
              condition = 1; 
            }
            else
            {
              condition = 0;/*breaking the placement loop*/
            }
            /* !!!!!! scan !!!!!!! */
            ledNumber=0;
            for(int i=4;i<22;i++)
            {
              if((i%2)==0)
              {
                for(int j=8;j>=0;j--)
                {
                  if(tetris[j][i]==1)
                  {
                    leds[ledNumber] = CRGB(255,0,0);
                  }
                  else
                  {
                    leds[ledNumber] = CRGB(0,0,0);
                  }
                  ledNumber = ledNumber +1;
                }
              }
              else
              {
                for(int j=0;j<9;j++)
                {
                  if(tetris[j][i]==1)
                  {
                    leds[ledNumber] = CRGB(255,0,0);
                  }
                  else
                  {
                    leds[ledNumber] = CRGB(0,0,0);
                  }
                  ledNumber = ledNumber + 1;
                }
              }  
            }
            FastLED.show();
      break;  
    }
  }
  /* checking for complete rows */
  emptyRowCounter = 0;
  for(int i=4;i<22;i++)/*4 as first 4 rows are for loading*/
  {
    int check =1;
    for(int j=0;j<9;j++)
    {
      if( tetris[x[j]][y[i]] == 1)
      {
        blankRows[emptyRowCounter]=i;
        emptyRowCounter = emptyRowCounter +1;
      }
      else
      {
        check =0;
        break;
      }
    }
    /*erasing empty rows*/
    if (check=1)
    {
      for(int k=0; k<9;k++)
      {
        tetris[x[k]][y[i]] = 0;
        /*scan*/
      }
    }
  }
 /* !!!!!! scan !!!!!!! */
  ledNumber=0;
  for(int i=4;i<22;i++)
  {
    if((i%2)==0)
    {
      for(int j=8;j>=0;j--)
      {
        if(tetris[j][i]==1)
        {
          leds[ledNumber] = CRGB(255,0,0);
        }
        else
        {
          leds[ledNumber] = CRGB(0,0,0);
        }
        ledNumber = ledNumber +1;
      }
    }
    else
    {
      for(int j=0;j<9;j++)
      {
        if(tetris[j][i]==1)
        {
          leds[ledNumber] = CRGB(255,0,0);
        }
        else
        {
          leds[ledNumber] = CRGB(0,0,0);
        }
        ledNumber = ledNumber + 1;
      }
    }  
  }
  FastLED.show();
  /* finding las occupied row*/

  for(int i=4;i<22;i++)/* starts with 3 as first four rows are for loading purposes*/
  {
    int check=1;
    lor =i;
    for(int j=0;j<9;j++)
    {
      if(tetris[j][i]==0)
      {

      }
      else
      {
        check = 0;
      }
    }
    if (check==0)
    {
      break;
    }
  }
  lur = lor -1;
    }
  }
}
